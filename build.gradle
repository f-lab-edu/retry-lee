plugins {
	/**
	 * https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_separation
	 * 이 부분 참고해서 java에서 java-library로 변경 후 api-user 모듈에서 jpa의 구현체를 사용하기 위해 api() 사용
	 */
	id 'java-library'
	id 'org.springframework.boot' version '3.3.2' apply(false)
	id 'io.spring.dependency-management' version '1.1.6' apply(false)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

subprojects {
	group = 'com.v1'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}
